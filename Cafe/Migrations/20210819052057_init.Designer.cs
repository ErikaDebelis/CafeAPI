// <auto-generated />
using Cafe.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cafe.Migrations
{
    [DbContext(typeof(CafeContext))]
    [Migration("20210819052057_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("Cafe.Drink", b =>
                {
                    b.Property<int>("DrinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Temp")
                        .HasColumnType("longtext");

                    b.HasKey("DrinkId");

                    b.ToTable("Drinks");

                    b.HasData(
                        new
                        {
                            DrinkId = 1,
                            Description = "This full-bodied dark roast coffee with bold, robust flavors showcases our roasting and blending artistry— an essential blend of balanced and lingering flavors.",
                            Name = "Hot Coffee",
                            Price = 3,
                            Temp = "Hot"
                        },
                        new
                        {
                            DrinkId = 2,
                            Description = "Handcrafted in small batches daily, slow-steeped in cool water for 20 hours. Made from our custom blend of beans grown to steep long and cold for a super-smooth flavor.",
                            Name = "Iced Coffee",
                            Price = 4,
                            Temp = "Cold"
                        },
                        new
                        {
                            DrinkId = 3,
                            Description = "Our dark, rich espresso combined with milk and served over ice. A perfect milk-forward cooldown.",
                            Name = "Iced Latte",
                            Price = 5,
                            Temp = "Cold"
                        },
                        new
                        {
                            DrinkId = 4,
                            Description = "Smooth and creamy matcha sweetened just right and served with steamed milk. This favorite will transport your senses to pure green delight.",
                            Name = "Matcha Latte",
                            Price = 3,
                            Temp = "Hot"
                        },
                        new
                        {
                            DrinkId = 5,
                            Description = "This boldly refreshing iced tea is made with a combination of our peach-flavored green tea and lemonade, and hand-shaken with ice.",
                            Name = "Iced Peach Green Tea",
                            Price = 2,
                            Temp = "Cold"
                        });
                });

            modelBuilder.Entity("Cafe.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Temp")
                        .HasColumnType("longtext");

                    b.HasKey("FoodId");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            FoodId = 1,
                            Description = "Sizzling applewood-smoked bacon, melty aged Gouda and a Parmesan frittata layered on an artisan roll for extra-smoky breakfast goodness.",
                            Name = "Breakfast Sandwich",
                            Price = 5,
                            Temp = "Hot"
                        },
                        new
                        {
                            FoodId = 2,
                            Description = "Thick-sliced turkey and melted provolone cheese stacked on a ciabatta roll, then topped with our signature basil pesto and arugula and tomato.",
                            Name = "Turkey Pesto Panini",
                            Price = 7,
                            Temp = "Hot"
                        },
                        new
                        {
                            FoodId = 3,
                            Description = "Cilantro lime brown rice and quinoa, arugula, grape tomatoes, Kalamata olives, cucumbers, hummus, lemon tahini dressing, feta and Greek yogurt.",
                            Name = "Mediterranean Bowl",
                            Price = 8,
                            Temp = "Cold"
                        },
                        new
                        {
                            FoodId = 4,
                            Description = "Chicken, arugula, romaine, baby kale, grape tomatoes, red onions, toasted pecan pieces, Gorgonzola and apple chips tossed in sweet white balsamic vinaigrette.",
                            Name = "Fuji Salad",
                            Price = 8,
                            Temp = "Cold"
                        },
                        new
                        {
                            FoodId = 5,
                            Description = "Freshly baked bagel topped with sesame seeds, poppy seeds, dried garlic, toasted onion & kosher salt. Toasted to perfection and topped with a generous amount of cream cheese",
                            Name = "Bagel",
                            Price = 3,
                            Temp = "Hot"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
